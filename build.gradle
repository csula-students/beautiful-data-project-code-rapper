apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    
    compile 'com.google.guava:guava:19.0'
	  compile 'org.slf4j:slf4j-api:1.7.20'
	  compile 'com.mashape.unirest:unirest-java:1.4.9'
	  compile 'org.mongodb:mongodb-driver:3.2.2'
	  compile 'org.twitter4j:twitter4j-core:4.0.4'
	  compile 'org.elasticsearch:elasticsearch:2.2.0'
	  compile 'com.google.code.gson:gson:2.6.2'
	  compile 'org.apache.commons:commons-csv:1.2'
}

test {
    systemProperties 'property': 'value'
}


task esClimate(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'edu.csula.datascience.acquisition.ClimateElasticSearch'
}

task esAgriculture(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'edu.csula.datascience.acquisition.AgricultureElasticSearch'
}

task hello(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'edu.csula.datascience.examples.Hello'
}

task token(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'edu.csula.datascience.auth.AuthenticationApp'
}

task getdata(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'edu.csula.datascience.acquisition.CollectorApp'
}

task esExample(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'edu.csula.datascience.examples.ElasticSearchExampleApp'   
}


task merge(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'merge.Intergrate'   
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
